@page "/admin/movies/edit/{id:long}"
@page "/admin/movies/create"
@inherits OwningComponentBase<IMovieRepository>
<style>
    div.validation-message {
        color: rgb(220, 53, 69);
        font-weight: 500
    }
</style>
<h3 class="bg-@ThemeColor text-white text-center p-1">@TitleText a Movie</h3>
<EditForm Model="Movie"  OnValidSubmit="SaveMovie">
    <DataAnnotationsValidator />
    @if (Movie.MovieId != 0)
    {
        <div class="form-group">
            <label>ID</label>
            <input class="form-control" disabled value="@Movie.MovieId" />
        </div>
    }
    <div class="form-group">
        <label>Name</label>
        <ValidationMessage For="@(() => Movie.Name)" />
        <InputText class="form-control" @bind-Value="Movie.Name" />
    </div>
    <div class="form-group">
        <label>Description</label>
        <ValidationMessage For="@(() => Movie.Description)" />
        <InputText class="form-control" @bind-Value="Movie.Description" />
    </div>
    <div class="form-group">
        <label>Genre</label>
        <ValidationMessage For="@(() => Movie.Genre)" />
        <InputText class="form-control" @bind-Value="Movie.Genre" />
    </div>
    <div class="form-group">
        <label>Price</label>
        <ValidationMessage For="@(() => Movie.Price)" />
        <InputNumber class="form-control" @bind-Value="Movie.Price" />
    </div>
    <button type="submit" class="btn btn-@ThemeColor">Save</button>
    <NavLink class="btn btn-secondary" href="/admin/movies">Cancel</NavLink>
</EditForm>
@code {
    public IMovieRepository Repository => Service;
    [Inject]
    public NavigationManager NavManager { get; set; }
    [Parameter]
    public long Id { get; set; } = 0;
    public Movie Movie { get; set; } = new Movie();
    protected override void OnParametersSet()
    {
        if (Id != 0)
        {
            Movie = Repository.Movies.FirstOrDefault(movie => movie.MovieId == Id);
        }
    }
    public void SaveMovie()
    {
        if (Id == 0)
        {
            Repository.CreateMovie(Movie);
        }
        else
        {
            Repository.SaveMovie(Movie);
        }
        NavManager.NavigateTo("/admin/movies");
    }
    public string ThemeColor => Id == 0 ? "primary" : "warning";
    public string TitleText => Id == 0 ? "Create" : "Edit";
}